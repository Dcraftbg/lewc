add_lew :: (a: i32, b: i32) -> i32 {
    return a + b;
}
sub_lew :: (a: i32, b: i32) -> i32 {
    return a - b;
}
mul_lew :: (a: i32, b: i32) -> i32 {
    return a * b;
}
div_lew :: (a: i32, b: i32) -> i32 {
    return a / b;
}
mod_lew :: (a: i32, b: i32) -> i32 {
    return a % b;
}
and_lew :: (a: i32, b: i32) -> i32 {
    return a & b;
}
or_lew :: (a: i32, b: i32) -> i32 {
    return a | b;
}
xor_lew :: (a: i32, b: i32) -> i32 {
    return a ^ b;
}
shl_lew :: (a: i32, b: i32) -> i32 {
    return a << b;
}
shr_lew :: (a: i32, b: i32) -> i32 {
    return a >> b;
}
bool_lt_lew :: (a: i32, b: i32) -> bool {
    return a < b;
}
bool_le_lew :: (a: i32, b: i32) -> bool {
    return a <= b;
}
bool_gt_lew :: (a: i32, b: i32) -> bool {
    return a > b;
}
bool_ge_lew :: (a: i32, b: i32) -> bool {
    return a >= b;
}
bool_and_lew :: (a: bool, b: bool) -> bool {
    return a && b;
}
bool_or_lew :: (a: bool, b: bool) -> bool {
    return a || b;
}
